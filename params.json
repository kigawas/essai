{
  "name": "Essai",
  "tagline": "Essay scoring system web application.",
  "body": "# essai\r\n\r\nEssay scoring system web application.\r\n\r\n## Install\r\n\r\nThe web framework is `Flask`, and the scoring module requires `scikit-learn` and `nltk` (and don't forget to download its `punkt` tokenizer).\r\n\r\n### Install prerequisites\r\n\r\nIn order to avoid redundant and meaningless building, I strongly recommend using [miniconda](http://conda.pydata.org/miniconda.html) to manage and install pre-built binaries.\r\n\r\n#### Install 3rd-party libraries\r\n\r\nFor spell checking and grammar checking:\r\n\r\nDebian/Ubuntu:\r\n\r\n```\r\nsudo apt-get install enchant default-jdk\r\n```\r\n\r\nFedora:\r\n\r\n```\r\nsudo dnf install enchant oracle-jdk8\r\n```\r\n\r\n#### Install miniconda\r\n\r\nDownload a Python 2.7 installer for your OS at [here](http://conda.pydata.org/miniconda.html).\r\n\r\nOr download from [TUNA's mirror](https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/).\r\n\r\n#### Create virtual environment\r\n\r\nAfter installing miniconda, we need to set up a virtual environment:\r\n\r\n`conda create -n essai --file package-list.txt`\r\n\r\nWhen finishing, activate it: `source activate essai`.\r\n\r\nAnd you may install Python packages from pip by `pip install -r requirements.txt`.\r\n\r\n#### Get pickles\r\nIf you want to use the scorer, you may need to train a scorer like what I do at [here](https://gist.github.com/kigawas/fbc016a1dce54a8b398d) and serialize it using `pickle`.\r\n\r\nIf you want to use coherence evaluation, you may also need to do the same thing just like [coheoka](https://github.com/kigawas/coheoka).\r\n\r\nI have prepared some pickles in `app/pickles` or download at [mega](https://mega.nz/#F!QZ0GhD5Z!geSL2jDD9tQF_Sma1CYnvQ).\r\n\r\n#### Test scoring\r\nAt first, make sure the submodule is ready:\r\n```\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\nBefore running this web application, you should set a environment variable like: `export CORENLP_URL=http:x.y.z:port` or it will just use `localhost:9000`.\r\n\r\nLet's check if the scorer works well:\r\n```\r\ncd app\r\npython scoring.py\r\n```\r\n\r\n#### Run a server\r\n\r\nJust `python manage.py runserver [-h $IP -p $PORT]`, if you want a faster server, try `gunicorn manage:app`.\r\n\r\n## Features\r\n\r\n- A holistic score from 1 to 6 (greater means better)\r\n- Spell checking and grammar checking\r\n- Coherence feedbacks\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}